---
env:
  contexts:
  - name: "WebGoat"
    urls:
    - "REPLACE"
    includePaths:
    - "REPLACE.*"
    excludePaths: []
    authentication:
      method: "form"
      parameters:
        loginPageUrl: "REPLACE/login"
        loginRequestUrl: "REPLACE/login"
        loginRequestBody: "username={%username%}&password={%password%}"
      verification:
        method: "response"
        loggedInRegex: "logout"
        loggedOutRegex: "login"
        pollFrequency: 60
        pollUnits: "requests"
        pollUrl: ""
        pollPostData: ""
    sessionManagement:
      method: "cookie"
      parameters: {}
    users:
    - name: "testing"
      credentials:
        password: "testing"
        username: "testing"
  parameters:
    failOnError: true
    failOnWarning: false
    progressToStdout: true
  vars: {}
jobs:
- parameters:
    updateAddOns: false
  install: []
  uninstall: []
  name: "addOns"
  type: "addOns"
- parameters:
    scanOnlyInScope: true
    enableTags: false
  rules: []
  name: "passiveScan-config"
  type: "passiveScan-config"
- parameters:
    user: "testing"
  requests:
  - url: "http://REPLACE/HttpBasics.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/HttpProxies.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/ChromeDevTools.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/CIA.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/Crypto.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/LessonTemplate.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/SqlInjection.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/SqlInjectionAdvanced.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/SqlInjectionMitigations.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/PathTraversal.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/AuthBypass.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/JWT.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/PasswordReset.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/SecurePasswords.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/InsecureLogin.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/XXE.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/IDOR.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/MissingFunctionAC.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/CrossSiteScripting.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/InsecureDeserialization.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/VulnerableComponents.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/HijackSession.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/SpoofCookie.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/CSRF.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/SSRF.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/LogSpoofing.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/BypassRestrictions.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/ClientSideFiltering.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/HtmlTampering.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/Challenge1.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/Challenge5.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/Challenge7.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  - url: "http://REPLACE/Challenge8.lesson.lesson"
    name: ""
    method: "GET"
    data: ""
    responseCode: 302
  name: "requestor"
  type: "requestor"
- parameters:
    context: "WebGoat"
    user: "testing"
    url: ""
    maxDuration: 0
    maxDepth: 0
    maxChildren: 0
  tests:
  - onFail: "INFO"
    statistic: "stats.auth.success"
    site: "http://REPLACE:8080"
    operator: ">="
    value: 1
    type: "stats"
    name: "at least 1 auth success"
  name: "spider"
  type: "spider"
- parameters:
    context: "WebGoat"
    user: "testing"
    url: "REPLACE/welcome.mvc"
    maxDuration: 0
    maxCrawlDepth: 0
    numberOfBrowsers: 1
  tests:
  - onFail: "INFO"
    statistic: "stats.auth.success"
    site: "http://REPLACE:8080"
    operator: ">="
    value: 1
    type: "stats"
    name: "at least 1 auth success"
  name: "spiderAjax"
  type: "spiderAjax"
- parameters: {}
  name: "passiveScan-wait"
  type: "passiveScan-wait"
- parameters:
    context: "WebGoat"
    user: "testing"
    policy: ""
    maxRuleDurationInMins: 0
    maxScanDurationInMins: 0
  policyDefinition:
    defaultStrength: "medium"
    defaultThreshold: "off"
    rules: []
  name: "activeScan"
  type: "activeScan"
- parameters:
    template: "traditional-html"
    reportDir: "/zap/wrk"
    reportFile: "index.html"
    reportTitle: "ZAP Scanning Report"
    reportDescription: ""
    displayReport: false
  risks:
  - "info"
  - "low"
  - "medium"
  - "high"
  confidences:
  - "falsepositive"
  - "low"
  - "medium"
  - "high"
  - "confirmed"
  sections:
  - "instancecount"
  - "alertdetails"
  - "alertcount"
  name: "report"
  type: "report"
